</br> You can choose to modify according to the tips above, or let our engineers assist you. If you need the assistance of our engineers, please click the button below to switch to manual services.


1.时区问题 - 不同时区显示不同时间
2.有效时间问题
3.物理优惠券问题 -
4.优惠券转让问题
5.优惠券明细 - 看板 - 暂时完成
6.指定用户优惠券问题

sale.order 客户下单 调用cpo-preferential接口
确认为销售订单时 才将数据放进cpo-preferential
    要解决的问题
        1、客户在选着地址的时候 可以选着使用优惠券 - 在rfq解决这个问题
        2、有销售订单产生 将数据放进 将符合条件的放进优惠模块中 - 在cpo-preferential解决这个问题

        现在还没有完成的事
            转让问题 - 半完成 需要在客户端来操作这问题 - 需要对接
            优惠券领取 - 优惠券的大体完成，关于领取的问题 需要在客户端操作这问题 - 需要对接
            优惠券数量多 - 这个逻辑保留给操作者 或 客户 在后端可以操作那种优惠券优先推送 - 后端完成 - 这个没有完成 ；在前端客户可以自己选择符合条件的优惠券 - 需要对接
            时间段、优惠券 - 要能让操作者自行决定哪一个优先 - 完成
            有关指定用户 - 还没有写
            有关时区问题 - 还没有想法
            物理码 - 完成 - 但没有解决一个问题 假设A活动与B活动优惠券物理码出现重复 需要怎么解决是那一个活动发出去的 - 没有想法

    数据图
        没有办法在创建一个模型 本身需要原始数据
        在 现有preferential_time_and_money 这个模型里想办法 弄出来
        通过一个向导 或者 优惠明细中的数据分析进行 视图跳转 不进行任何保存
<!--&lt;!&ndash;定时动作&ndash;&gt;-->
<!--<record id="scheduler_demo_action" model="ir.cron" forcecreate="True">-->
    <!--<field name="name">Promotion time automation</field>-->
    <!--<field name="model">preferential.cpo_time_and_money</field>-->
    <!--<field name="doall">True</field>-->
    <!--<field name="active">True</field>-->
    <!--<field name="interval_number">1</field>-->
    <!--<field name="interval_type">days</field>-->
    <!--<field name="numbercall">-1</field>-->
    <!--<field name="user_id" ref="base.user_root"/>-->
    <!--<field name="model_id" ref="model_preferential_cpo_time_and_money"/>-->
    <!--<field name="state">code</field>-->
    <!--<field name="code">model.definite_time_ware()</field>-->
    <!--<field name="priority">0</field>-->
    <!--<field name="website_published">True</field>-->
<!--</record>-->

关于沙盒测试
    payment_transaction
    每次生成独立一天交易记录







# -*- coding: uft-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

""" This module provides the elements for managing two different API styles,
    namely the "traditional" and "record" styles.

    In the "traditional" style, parameters like the database cursor, user id,
    context dictionary and record ids (usually denoted as ``cr``, ``uid``,
    ``context``, ``ids``) are passed explicitly to all methods. In the "record"
    style, those parameters are hidden into model instances, which gives it a
    more object-oriented feel.

    For instance, the statements::

        model = self.pool.get(MODEL)
        ids = model.search(cr, uid, DOMAIN, context=context)
        for rec in model.browse(cr, uid, ids, context=context):
            print rec.name
        model.write(cr, uid, ids, VALUES, context=context)

    may also be written as::

        env = Environment(cr, uid, context) # cr, uid, context wrapped in env
        model = env[MODEL]                  # retrieve an instance of MODEL
        recs = model.search(DOMAIN)         # search returns a recordset
        for rec in recs:                    # iterate over the records
            print rec.name
        recs.write(VALUES)                  # update all records in recs

    Methods written in the "traditional" style are automatically decorated,
    following some heuristics based on parameter names.
"""

__all__ = [
    'onchange_check',
]

import logging
_logger = logging.getLogger(__name__)

# The following attributes are used, and reflected on wrapping methods:
#  - method._constrains: set by @constrains, specifies constraint dependencies
#  - method._depends: set by @depends, specifies compute dependencies
#  - method._returns: set by @returns, specifies return model
#  - method._onchange: set by @onchange, specifies onchange fields
#  - method.clear_cache: set by @ormcache, used to clear the cache
#
# On wrapping method only:
#  - method._api: decorator function, used for re-applying decorator
#  - method._orig: original method
#

WRAPPED_ATTRS = ('_onchange_check',)


def attrsetter(attr, value):
    """ Return a function that sets ``attr`` on its argument and returns it. """
    return lambda method: setattr(method, attr, value) or method


def onchange_check(*args):
    return attrsetter('_onchange_check', args)




    # # 只负责检查 埋盲孔结构问题 不报价 - 当 [1,6] [2,4]无法报错
    # def check_buried_blind_hole(self, args, layer):
    #     # 钻带结构  钻带数  压合
    #     structure, blind_number = [], None
    #     for x_dict in args:
    #         if x_dict.get('cpo_blind_drillbelt'):
    #             blind_number = int(x_dict.get('cpo_blind_drillbelt'))
    #         elif type(x_dict[x_dict.keys()[0]]) is list:
    #             list_x = [int(x_dict[x_dict.keys()[0]][0]), int(x_dict[x_dict.keys()[0]][1])]
    #             structure.append(sorted(list_x))
    #     np_structure = np.array(sorted(structure))
    #     if np_structure.max() > int(layer):  # 输入的值不得超过 当前层数
    #         return {'warning': 'Among the values entered, there are more than the current number of layers.'}
    #     np_list = [int(x) for x in np.nditer(np_structure)]
    #     count_list = filter(lambda x: np_list.count(x) > blind_number, set(np_list))
    #     if count_list:  # 不能超过出现次数 钻带数
    #         return {'warning': 'L and L cannot be the same between the drill belt structure.'}
    #     str_list = [str(x) for x in sorted(structure)]
    #     if len(set(str_list)) != len(str_list):  # 不能出现相同的钻带结构 如 1-2 2-1
    #         return {'warning': 'The same drill belt structure appears.'}
    #     # 返回 钻带数 压合 层数
    #     return {'blind_number': blind_number, 'structure': structure, 'layer': layer}

    # # 检查 钻带数与层数间 是否正确 - 非计算
    # def check_layer_blind_number(self, args):
    #     blind_number, layer = args.get('cpo_blind_drillbelt'), args.get('pcb_layer')
    #     number = (len(list(combinations(range(int(layer)), 2))) - 1)  # 确定当前层数 是否符合埋盲孔条件
    #     if int(blind_number) > 0:
    #         if number <= 0:
    #             return {'warning': 'The number of layers required for the process is at least 4 layers'}
    #         elif int(blind_number) > int(layer):
    #             return {'warning': "The number of drill belts you entered does not match the number of layers."
    #                                "It is recommended to enter less than or equal to %s."% int(layer)}
    #         else:
    #             return {'value': True}



    # # 埋盲孔 - 工艺 暂时不管 1+N+1
    # def cpo_buried_blind_hole(self, *args):
    #     args = args[0]
    #     hdi, area, price = args.get('hdi'), args.get('area'), args.get('price_id')
    #     blind_id = price.version_id.buried_blind_hole_id.search([('price_version_id', '=', price.version_id.id),
    #                                                              ('blind_min', '<', area),
    #                                                              ('blind_max', '>=', area)])
    #     structure, blind_number, layer = hdi.get('structure'), hdi.get('blind_number'), hdi.get('layer')
    #     # 压合次数
    #     solidity, x_list = 0, []
    #     # 根据结构统计 压合次数
    #     for x in structure:
    #         if abs(x[0] - x[1]) > 1:
    #             solidity += 1
    #             x_list.append(x)
    #     # 结构中如果没有最顶层 和 最底层的出现 则要加1
    #     if not filter(lambda x:x == [1, layer], structure):
    #         solidity += 1
    #     # 激光钻孔成本 - 还没有算
    #
    #     return True











<!--Default Notification Email template for invoices-->
        <record id="crm_msa.MarketMailTemplateRed" model="mail.template">
            <field name="name">Red</field>
            <field name="email_from"><![CDATA["${object.write_uid.company_id.name|safe}" <${(object.write_uid.company_id.email)|safe}>]]></field>
            <!--<field name="email_from">eason.chen@chinapcbone.com.cn</field>-->
            <field name="subject">${object.subject}</field>
            <field name="model_id" ref="mail.model_mail_message"/>
            <field name="auto_delete" eval="True"/>
            <field name="body_html"><![CDATA[<html>
                <head></head>
                % set record = ctx.get('record')
                % set company = record and record.company_id or user.company_id
                <body style="margin: 0; padding: 0;">
                <table border="0" width="100%" cellpadding="0" bgcolor="#ededed" style="padding: 20px; background-color: #ededed; border-collapse:separate;" summary="o_mail_notification">
                    <tbody>

                      <!-- HEADER -->
                      <tr>
                        <td align="center" style="min-width: 590px;">
                          <table width="590" border="0" cellpadding="0" bgcolor="#875A7B" style="min-width: 590px; background-color: rgb(135,90,123); padding: 20px; border-collapse:separate;">
                            <tr>
                              <td valign="middle">
                                  <span style="font-size:20px; color:white; font-weight: bold;">
                                      ${object.record_name}
                                  </span>
                              </td>
                              <td valign="middle" align="right">
                                  <img src="/logo.png?company=${company.id}" style="padding: 0px; margin: 0px; height: auto; width: 80px;" alt="${company.name}">
                              </td>
                            </tr>
                          </table>
                        </td>
                      </tr>

                      <!-- CONTENT -->
                      <tr>
                        <td align="center" style="min-width: 590px;">
                          <table width="590" border="0" cellpadding="0" bgcolor="#ffffff" style="min-width: 590px; background-color: rgb(255, 255, 255); padding: 20px; border-collapse:separate;">
                            <tbody>
                              <td valign="top" style="font-family:Arial,Helvetica,sans-serif; color: #555; font-size: 14px;">
                                ${object.body | safe}
                              </td>
                            </tbody>
                          </table>
                        </td>
                      </tr>

                      <!-- FOOTER -->
                      <tr>
                        <td align="center" style="min-width: 590px;">
                          <table width="590" border="0" cellpadding="0" bgcolor="#875A7B" style="min-width: 590px; background-color: rgb(135,90,123); padding: 20px; border-collapse:separate;">
                            <tr>
                              <td valign="middle" align="left" style="color: #fff; padding-top: 10px; padding-bottom: 10px; font-size: 12px;">
                                ${company.name}<br/>
                                ${company.phone or ''}
                              </td>
                              <td valign="middle" align="right" style="color: #fff; padding-top: 10px; padding-bottom: 10px; font-size: 12px;">
                                % if company.email:
                                <a href="mailto:${company.email}" style="text-decoration:none; color: white;">${company.email}</a><br/>
                                % endif
                                % if company.website:
                                    <a href="${company.website}" style="text-decoration:none; color: white;">
                                        ${company.website}
                                    </a>
                                % endif
                              </td>
                            </tr>
                          </table>
                        </td>
                      </tr>
                    </tbody>
                </table>
                </body>
                </html>
            ]]></field>
        </record>
        <record id="crm_msa.MarketMailTemplateBlue" model="mail.template">
            <field name="name">Blue</field>
            <field name="email_from"><![CDATA["${object.write_uid.company_id.name|safe}" <${(object.write_uid.company_id.email)|safe}>]]></field>
            <!--<field name="email_from">eason.chen@chinapcbone.com.cn</field>-->
            <field name="subject">${object.subject}</field>
            <field name="model_id" ref="mail.model_mail_message"/>
            <field name="auto_delete" eval="True"/>
            <field name="body_html"><![CDATA[<html>
                <head></head>
                % set record = ctx.get('record')
                % set company = record and record.company_id or user.company_id
                <body style="margin: 0; padding: 0;">
                <table border="0" width="100%" cellpadding="0" bgcolor="#ededed" style="padding: 20px; background-color: #ededed; border-collapse:separate;" summary="o_mail_notification">
                    <tbody>

                      <!-- HEADER -->
                      <tr>
                        <td align="center" style="min-width: 590px;">
                          <table width="590" border="0" cellpadding="0" bgcolor="#875A7B" style="min-width: 590px; background-color: rgb(72,181,230); padding: 20px; border-collapse:separate;">
                            <tr>
                              <td valign="middle">
                                  <span style="font-size:20px; color:white; font-weight: bold;">
                                      ${object.record_name}
                                  </span>
                              </td>
                              <td valign="middle" align="right">
                                  <img src="/logo.png?company=${company.id}" style="padding: 0px; margin: 0px; height: auto; width: 80px;" alt="${company.name}">
                              </td>
                            </tr>
                          </table>
                        </td>
                      </tr>

                      <!-- CONTENT -->
                      <tr>
                        <td align="center" style="min-width: 590px;">
                          <table width="590" border="0" cellpadding="0" bgcolor="#ffffff" style="min-width: 590px; background-color: rgb(255, 255, 255); padding: 20px; border-collapse:separate;">
                            <tbody>
                              <td valign="top" style="font-family:Arial,Helvetica,sans-serif; color: #555; font-size: 14px;">
                                ${object.body | safe}
                              </td>
                            </tbody>
                          </table>
                        </td>
                      </tr>

                      <!-- FOOTER -->
                      <tr>
                        <td align="center" style="min-width: 590px;">
                          <table width="590" border="0" cellpadding="0" bgcolor="#875A7B" style="min-width: 590px; background-color: rgb(72,181,230); padding: 20px; border-collapse:separate;">
                            <tr>
                              <td valign="middle" align="left" style="color: #fff; padding-top: 10px; padding-bottom: 10px; font-size: 12px;">
                                ${company.name}<br/>
                                ${company.phone or ''}
                              </td>
                              <td valign="middle" align="right" style="color: #fff; padding-top: 10px; padding-bottom: 10px; font-size: 12px;">
                                % if company.email:
                                <a href="mailto:${company.email}" style="text-decoration:none; color: white;">${company.email}</a><br/>
                                % endif
                                % if company.website:
                                    <a href="${company.website}" style="text-decoration:none; color: white;">
                                        ${company.website}
                                    </a>
                                % endif
                              </td>
                            </tr>
                          </table>
                        </td>
                      </tr>
                    </tbody>
                </table>
                </body>
                </html>
            ]]></field>
        </record>


























